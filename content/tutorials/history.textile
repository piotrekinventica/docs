---
title: History Tutorial
section: tutorials
index: 20
---

Ably's "history feature":/realtime/history enables you to store messages published on channels that can later be retrieved using the "channel history API":/realtime/history.

By default, channels will only store messages in memory for up to two minutes. However, using "channel rules":https://support.ably.io/solution/articles/3000030057-what-are-channel-rules-and-how-can-i-use-them-in-my-app, you can configure messages published on matching channels to be persisted to disk for "typically 24 - 72 hours":https://support.ably.io/solution/articles/3000030059-how-long-are-messages-stored-for. Those messages will then be immediately available for retrieval via our Realtime and REST API clients for as long as the message is stored on disk.

Using our "history API":/realtime/history is trivial.  Let's get started.

<%= partial 'tutorials/_step-1-setup-free-account' %>

h2. Step 2 - Configure all channels within a namespace to persist messages to disk

Channels can be named using any unicode string characters with the only restriction that they cannot start with a @[@ or @:@ character as these are used as "special" characters. A colon @:@ is used to delimit channel namespaces in a format such as @namespace:channel@. Namespaces provide a flexible means to group channels together. Channel grouping can be useful when, for example, "configuring permissions (capabilities) for a set of channels within a client token":/general/authentication#capabilities-explained or setting up rules to apply to one or more channels.

We will be using channel rules in this tutorial to ensure all channels in the @persisted@ namespace are configured to persist messages to disk i.e. we will explicitlyt enable the history feature. Follow these steps:

# Visit your "account dashboard":https://support.ably.io/solution/articles/3000048664-how-do-i-access-my-account-dashboard, navigate to the same app you chose in Step 1 when obtaining your API key earlier
# Click on the Settings tab and scroll down to the "Channel rules" section
# Click the "Add new rule" button (see below)
<a href="/images/tutorials/channel-rules-add-new-rule.png" target="_blank">
  <img src="/images/tutorials/channel-rules-add-new-rule.png" style="width: 100%" alt="Add new channel rule screenshot">
</a>
# Once the modal has opened, enter "persisted" for the namespace, check the Persisted check box to enable history, and click the "Create channel rule" button (see below)
<a href="/images/tutorials/channel-rules-create-modal.png" target="_blank">
  <img src="/images/tutorials/channel-rules-create-modal.png" style="width: 100%" alt="Create channel rule screenshot">
</a>

You have now enabled history for all channels in the @persisted@ namespace i.e. any channel with a name matching the pattern @peristed:*@ will store published messages to disk.

h2. Step 3 - Install Ably

blang[javascript].
  To start using Ably in your web app, you first need to include the Ably library. We recommend that you include the latest client library from our CDN using a simple @<script>@ tag. The client library must be instanced with the API key you copied in Step 1. Note in production we recommend you always use the "token authentication scheme":/general/authentication#token-authentication for browser clients, however in this example we use an API key for simplicity.

  Include the code below just before your closing your HTML @</html>@ tag.

  ```[javascript]
    <!-- Include the latest Ably Library  -->
    <script src="//cdn.ably.io/lib/ably-0.min.js"></script>

    <!-- Instance the Ably library  -->
    <script type="text/javascript">
      var realtime = new Ably.Realtime(apiKey);
    </script>
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/a55b855

h2. Step 4 - Publishing messages to be stored with channel history

Before we can use the history API to retrieve previously published messages, we need to publish some messages to a channel. In the example code below, we publish 3 messages to the channel.

blang[javascript].
  ```[javascript]
    var channel = realtime.channels.get("persisted:sounds");
    channel.publish("play", "bark");
    channel.publish("play", "meow");
    channel.publish("play", "cluck");
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/f460ba7

h2. Step 5 - Retrieving messages from history

Now that we have published messages on a channel that is configured to store messages on disk, we can retrieve them using the history method of the channel object.

blang[javascript].
  ```[javascript]
    var channel = realtime.channels.get("persisted:sounds");
    channel.history(function(err, resultPage) {
      alert("Last message published: " + JSON.stringify(resultPage.items[0].data));
    });
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/9716aa2

We're done, it's that simple. We have now shown you how to set up a channel to use persisted history using channel rules, then we published some messages on that channel, and later retrieved them using the history API.

h2. Download tutorial source code

blang[javascript].
  The complete source code for each step of "this tutorial is available on Github":https://github.com/ably/tutorials/commits/history-javascript.

  We recommend that you clone the repo locally:

  bc[sh]. git clone https://github.com/ably/tutorials.git

  Checkout the tutorial branch:

  bc[sh]. git checkout history-javascript

  And then run the demo locally by adding your "Ably API key":https://support.ably.io/support/solutions/articles/3000030502-setting-up-and-managing-api-keys to @example.html@ and opening the page in your browser.

h2. Next steps

1. If you would like to find out more about how to use the history API from your devices and apps, see the "Realtime history documentation":https://www.ably.io/documentation/realtime/history. Typically on servers customers prefer to use the "REST history API":https://www.ably.io/documentation/rest/history
2. Learn more about "Ably features":https://www.ably.io/features by stepping through our other "Ably tutorials":https://www.ably.io/tutorials
3. Gain a good technical "overview of how the Ably realtime platform works":https://www.ably.io/documentation/how-ably-works
4. "Get in touch if you need help":https://www.ably.io/contact
